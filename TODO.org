Todo List

* TODO
  - [ ] Sequencer, Channel, and Blip should have a unique id in state.
  - [ ] Use controller. Manages state for a single item. Remove
    stateful usage and move into controller. On controller state
    change, update sequencer. receiveState, does not trigger change
    events. setState does the normal stuff. Components only interface
    with the controller. The controller is responsible for exposing
    only what is needed from the item. The controller may provide
    model sort of helpers and also view type helpers. It is something
    of a dumping ground.
  - [ ] Sequencer speed
  - [ ] Horizontal slider appears when clicking on blip and dragging
    along x axis. Slider is centered on blip. Ghost slider on previous
    value.
  - [ ] Name channels (but keep sample name visible). Order channels
    by name
  - [ ] Scroll on the channel name to control all channel blips
  - [ ] Modes at top (gain pitch, etc.)
  - [ ] Active blip pulses and fades, use key frames
  - [ ] Undo channel remove
  - [ ] Channel mute and remove
  - [ ] Change total beats to 32
  - [ ] Add total beats to sequencer
  - [ ] Add project to github

* LATER
  - [ ] Create store.RecordArray subclass
    + Used to store subrecords as part of a record. Stores ids and
      when an elment of the array is referenced, does a lookup.
  - [ ] Get localstorage with store.js working.
  - [ ] Detach event handlers on components.
  - [ ] Song mode
  - [ ] New class sorted array
  - [ ] Hover over blip for more controls (copy paste)
  - [ ] Active blips are dimensional. Muted are recessed.

* DONE